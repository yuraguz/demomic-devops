version: "1.0"
services:

  postgres:
    container_name: postgres
    image: postgres
    volumes:
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    environment:
      POSTGRES_MULTIPLE_DATABASES: DEMOMIC_LICENSE,DEMOMIC_PRODUCT
      POSTGRES_USER: GZ_DEMOMIC
      POSTGRES_PASSWORD: GZ_DEMOMIC
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "database"

  demomic-config:
    image: demomic-config:0.0.1-SNAPSHOT
    container_name: demomic-config
    volumes:
      - C:\Users\yurag\.ssh:/root/.ssh:ro
    ports:
      - "9000:9000"
    networks:
      backend:
        aliases:
          - "demomic-config"

  demomic-eureka:
    image: demomic-eureka:0.0.1-SNAPSHOT
    container_name: demomic-eureka
    ports:
      - "8070:8070"
    networks:
      backend:
        aliases:
          - "demomic-eureka"

  demomic-licence:
    image: demomic-license:0.0.1-SNAPSHOT
    container_name: demomic-license
    ports:
      - "8090:8080"
    depends_on:
      postgres:
        condition: service_healthy
      demomic-config:
        condition: service_started
    networks:
      backend:
        aliases:
          - "demomic-license"

  demomic-product:
    image: demomic-product:0.0.1-SNAPSHOT
    container_name: demomic-product
    ports:
      - "8100:8080"
    depends_on:
      postgres:
        condition: service_healthy
      demomic-config:
        condition: service_started
    networks:
      backend:
        aliases:
          - "demomic-product"

networks:
  backend:
    driver: bridge
